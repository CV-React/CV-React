// Limit the number of lines that text can display

@mixin text-clamp($value) {
  word-break: break-all;
  display: -webkit-box;
  -webkit-line-clamp: $value;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-word;
}

@mixin md {
  @media screen and (max-width: 768px) {
    @content;
  }
}

// breakpoint
@mixin sp {
  @media screen and (max-width: #{$breakpoint1}) {
    @content;
  }
}

@mixin custom__sp {
  @media screen and (max-width: #{$breakpoint2}) {
    @content;
  }
}

@mixin sp-special {
  @media screen and (min-width: 415px) {
    @content;
  }
}

@mixin desktop-small {
  @media screen and (max-width: 1600px) and (min-width: 415px) {
    @content;
  }
}

@mixin desktop-md {
  @media (max-width: 1240px) and (min-width: 768px) {
    @content;
  }
}

@mixin pc-md {
  @media (max-width: 1160px) and (min-width: 768px) {
    @content;
  }
}

@mixin tab {
  @media (min-width: 768px) and (max-width: 1024px) {
    @content;
  }
}

@mixin sm-tab {
  @media (min-width: 450px) and (max-width: 768px) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: 768px) {
    @content;
  }
}

@mixin big-screen {
  @media (min-width: 1920px) {
    @content;
  }
}

@mixin desktop__big {
  @media (max-width: 992px) {
    @content;
  }
}


// Flex which can have choose justify-content and align-items
@mixin flex($justify, $align) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
}

@mixin boxShadow {
  box-shadow: 0 2px 5px 0 rgb(0 0 0 / 16%), 0 2px 10px 0 rgb(0 0 0 / 12%);
}

@mixin boxShadowHover {
  box-shadow: 0 5px 11px 0 rgb(0 0 0 / 18%), 0 4px 15px 0 rgb(0 0 0 / 15%);
}

// Quick generate a box
@mixin quick-box($width, $height, $padding, $borderRadius) {
  padding: $padding;
  border-radius: $borderRadius;

  @if $width>0 {
    width: #{$width}px;
  }

  @else {
    width: 100px;
  }

  @if $height>0 {
    height: #{$height}px;
  }

  @else {
    height: 100px;
  }
}

// convert fontSize from px to em
@mixin fs($fs, $base: 16) {
  font-size: #{$fs / $base}em;
}

// Init font face mixin
@mixin font-face($fontFamilyName, $fontName, $fontWeight) {
  @font-face {
    font-family: "#{$fontFamilyName}";
    src: url("../fonts/#{$fontName}.ttf") format("opentype");
  }

  @if $fontWeight==bold {
    font-weight: normal;
    font-style: normal;
  }

  @else if $fontWeight==bolder {
    font-weight: normal;
    font-style: normal;
  }

  @else if type-of($fontWeight)=="number" {
    font-weight: normal;
    font-style: normal;
  }
}

@mixin animated {
  animation-duration: 1s;
  -webkit-animation-duration: 1s;
}